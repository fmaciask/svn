<Location BASEPATH>
          DAV svn
          SVNParentPath /svn
</Location>

<Macro LdapAuth>
       AuthName "LDAP_DOMAIN"
       Allow from all
       AuthBasicProvider ldap
       AuthType Basic
       AuthLDAPURL "LDAP_URL/LDAP_USER_BASELDAP_URL_QUERY"
       AuthLDAPBindDN LDAP_BIND_DN
       AuthLDAPBindPassword LDAP_BIND_PWD
       AuthLDAPGroupAttribute LDAP_MEMBER_UID
       AuthLDAPGroupAttributeIsDN LDAP_GROUP_ATTR_IS_DN
</Macro>

<Macro LdapAllUser>
       Use LdapAuth
       Require valid-user
</Macro>

<Macro LdapUser $username>
       Use LdapAuth
       Require ldap-user $username
</Macro>

<Macro LdapGroup $groupname>
       Use LdapAuth
       Require ldap-group $groupname
</Macro>

<Perl>
    use Data::Dumper;
    use Net::LDAP;
    $Data::Dumper::Purity = 1;
    print "LDAP-Configuration:\n";
    my $basepath = 'BASEPATH';
    my $ldap_config_verbose = 'LDAP_CONFIG_VERBOSE';
    my $ldap_host = 'LDAP_HOST';
    my $ldap_base = 'LDAP_BASE';
    my $ldap_group_base = 'LDAP_GROUP_BASE';
    my $ldap_user_base = 'LDAP_USER_BASE';
    my $ldap_bind_dn = 'LDAP_BIND_DN';
    my $ldap_bind_pwd = 'LDAP_BIND_PWD';
    my $ldap_read_dn = 'LDAP_READ_DN';
    my $ldap_write_dn = 'LDAP_WRITE_DN';
    my $ldap_read_default = 'LDAP_READ_DEFAULT';
    my $ldap_write_default = 'LDAP_WRITE_DEFAULT';
    if ($ldap_config_verbose>1) {
        print "basepath = 'BASEPATH'\n";
        print "ldap_config_verbose = 'LDAP_CONFIG_VERBOSE'\n";
        print "ldap_host = 'LDAP_HOST'\n";
        print "ldap_base = 'LDAP_BASE'\n";
        print "ldap_group_base = 'LDAP_GROUP_BASE'\n";
        print "ldap_user_base = 'LDAP_USER_BASE'\n";
        print "ldap_bind_dn = 'LDAP_BIND_DN'\n";
        print "ldap_bind_pwd = 'LDAP_BIND_PWD'\n";
        print "ldap_read_dn = 'LDAP_READ_DN'\n";
        print "ldap_write_dn = 'LDAP_WRITE_DN'\n";
        print "ldap_read_default = 'LDAP_READ_DEFAULT'\n";
        print "ldap_write_default = 'LDAP_WRITE_DEFAULT'\n";
    }
    if ($ldap_host =~ qw/./) {
        if ($ldap_config_verbose>0) {print "connect to $ldap_host\n";}
        my $mesg;
        my $ldap = Net::LDAP->new($ldap_host)
            or die "cannot create ldap";
        if ($ldap_bind_dn =~ qw/^$/) {
            $mesg = $ldap->bind(); # anonymous bind
        } else {
            $mesg = $ldap->bind($ldap_bind_dn,
                                password => $ldap_bind_pwd);
        }
        $mesg->{resultCode}==0 or die "bind failed";
        opendir(DH, "/svn");
        my @projects = readdir(DH);
        closedir(DH);
        foreach $project (@projects) {
            next if ($project eq ".");
            next if ($project eq "..");
            if ($ldap_config_verbose>0) {print "PROJECT: $project â†’ ";}
            if ($ldap_read_dn =~ qr/^(ou|dc)=/) {
                $mesg = $ldap->search( # perform a search
                                      base   => $ldap_read_dn.','.$ldap_group_base,
                                      filter => "(&(cn=".$project.")(objectClass=posixGroup))",
                                      attrs  => [ "cn" ]);
                if (@{$mesg->{entries}} == 1) {
                    $Location{$basepath."/".$project} = {
                        Use => "LdapGroup ".$mesg->{entries}[0]->{asn}->{objectName}
                    };
                    if ($ldap_config_verbose>0) {
                        print "read:".$mesg->{entries}[0]->{asn}->{objectName}." ";
                    }
                } else {
                    if ($ldap_read_default =~ qr/^(cn|uid)=/) {
                        $Location{$basepath."/".$project} = {
                            Use => "LdapGroup ".$ldap_read_default.','.$ldap_group_base
                        };
                        if ($ldap_config_verbose>0) {
                            print "read:$ldap_read_default ";
                        }
                    } elsif ($ldap_read_default =~ qr/^user$/) {
                        $Location{$basepath."/".$project} = {
                            Use => "LdapAllUser"
                        };
                        if ($ldap_config_verbose>0) {
                            print "read:user ";
                        }
                    } elsif ($ldap_read_default =~ qr/^$/) {
                        # no limits
                        if ($ldap_config_verbose>0) {
                            print "read:public ";
                        }
                    } else {
                        die "unknown value: ".$ldap_read_default
                    }
                }
            } elsif ($ldap_read_dn =~ qr/^(cn|uid)=/) {
                $Location{$basepath."/".$project} = {
                     Use => "LdapGroup ".$ldap_read_dn.','.$ldap_group_base
                };
                if ($ldap_config_verbose>0) {
                    print "read:$ldap_read_dn ";
                }
            } elsif ($ldap_read_dn =~ qr/^user$/) {
                $Location{$basepath."/".$project} = {
                    Use => "LdapAllUser"
                };
                if ($ldap_config_verbose>0) {
                    print "read:user ";
                }
            } elsif ($ldap_read_dn =~ qr/^$/) {
                # no limits
                if ($ldap_config_verbose>0) {
                    print "read:public ";
                }
            } else {
                die "unknown value: ".$ldap_read_dn
            }
            if ($ldap_write_dn =~ qr/^(ou|dc)=/) {
                $mesg = $ldap->search( # perform a search
                                      base   => $ldap_write_dn.','.$ldap_group_base,
                                      filter => "(&(cn=".$project.")(objectClass=posixGroup))",
                                      attrs  => [ "cn" ]);
                if (@{$mesg->{entries}} == 1) {
                    $Location{$basepath."/".$project} = {
                        Use => $Location{$basepath."/".$project}->{Use},
                        LimitExcept => {
                            "GET PROPFIND OPTIONS REPORT" => {
                                Use => "LdapGroup ".$mesg->{entries}[0]->{asn}->{objectName}
                            }
                        }
                    };
                    if ($ldap_config_verbose>0) {
                        print "write:".$mesg->{entries}[0]->{asn}->{objectName}."\n";
                    }
                } else {
                    if ($ldap_write_default =~ qr/^(cn|uid)=/) {
                        $Location{$basepath."/".$project} = {
                            Use => $Location{$basepath."/".$project}->{Use},
                            LimitExcept => {
                                "GET PROPFIND OPTIONS REPORT" => {
                                    Use => "LdapGroup ".$ldap_write_default.','.$ldap_group_base
                                }
                            }
                        };
                        if ($ldap_config_verbose>0) {
                            print "write:".$ldap_write_default.','.$ldap_group_base."\n";
                        }
                    } elsif ($ldap_write_default =~ qr/^user$/) {
                        if ($Location{$basepath."/".$project}->{Use} =~ /$^/) {
                            $Location{$basepath."/".$project} = {
                                Use => $Location{$basepath."/".$project}->{Use},
                                LimitExcept => {
                                    "GET PROPFIND OPTIONS REPORT" => {
                                        Use => "LdapAllUser"
                                    }
                                }
                            };
                            if ($ldap_config_verbose>0) {
                                print "write:user\n";
                            }
                        } else {
                            if ($ldap_config_verbose>0) {
                                print "write:same\n";
                            }
                        }
                    } elsif ($ldap_write_default =~ qr/^$/) {
                        # no additional limits
                        if ($ldap_config_verbose>0) {
                            if ($Location{$basepath."/".$project}->{Use} =~ /$^/) {
                                print "write:public\n";
                            } else {
                                print "write:same\n";
                            }
                        }
                    } else {
                        die "unknown value: ".$ldap_write_default
                    }
                }
            } elsif ($ldap_write_dn =~ qr/^(cn|uid)=/) {
                $Location{$basepath."/".$project} = {
                    Use => $Location{$basepath."/".$project}->{Use},
                    LimitExcept => {
                        "GET PROPFIND OPTIONS REPORT" => {
                            Use => "LdapGroup ".$ldap_read_dn.','.$ldap_group_base
                        }
                    }
                };
                if ($ldap_config_verbose>0) {
                    print "write:".$ldap_read_dn.','.$ldap_group_base."\n";
                }
            } elsif ($ldap_write_dn =~ qr/^user$/) {
                if ($Location{$basepath."/".$project}->{Use} =~ /$^/) {
                    $Location{$basepath."/".$project} = {
                        Use => $Location{$basepath."/".$project}->{Use},
                        LimitExcept => {
                            "GET PROPFIND OPTIONS REPORT" => {
                                Use => "LdapAllUser"
                            }
                        }
                    };
                    if ($ldap_config_verbose>0) {
                        print "write:user\n";
                    }
                } else {
                    if ($ldap_config_verbose>0) {
                        print "write:same\n";
                    }
                }
            } elsif ($ldap_write_dn =~ qr/^$/) {
                # no additional limits
                if ($ldap_config_verbose>0) {
                    if ($Location{$basepath."/".$project}->{Use} =~ /$^/) {
                        print "write:public\n";
                    } else {
                        print "write:same\n";
                    }
                }
            } else {
                die "unknown value: ".$ldap_write_dn
            }
        }
    } else {
       if ($ldap_config_verbose>0) {
           print "no LDAP, no restrictions";
       }
    }
    if ($ldap_config_verbose>2) {
        print "CONFIGURATION:\n".Dumper(%Location)."\n";
    }
</Perl>
